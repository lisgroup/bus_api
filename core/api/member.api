info(
    desc: "用户中心"
    author: "lisgroup"
    email: "lisgroup@qq.com"
)

@server(
    group: member
    prefix: /api/user
)
service core-api {
    // 用户注册
    @handler UserRegister
    post /register (UserRegisterRequest) returns (UserResponse)
    // 发送验证码发送
    @handler MailCodeSendRegister
    post /mail/code/send/register (SendEMailRequest) returns (SendEMailUserResponse)
    // 用户登录
    @handler UserLogin
    post /login (UserLoginRequest) returns (UserResponse)
	// 极验验证
	@handler GeeCode
	get /startCaptcha (GeeRequest) returns (GeeResponse)
	// 退出登录
	@handler UserLogout
	post /logout () returns (UserLogoutResponse)
}

type UserRegisterRequest {
    // 用户名密码
    Username     string `json:"username"`
    Password string `json:"password"`
    // 邮箱
    Email string `json:"email"`
    // 验证码
    Code string `json:"code"`
}

type SendEMailRequest {
    Email string `json:"email"`
}

type UserLoginRequest {
    Username     string `json:"username"`
    Password string `json:"password"`
    Uuid string `json:"uuid"`
    GeeTestChallenge string `json:"geetest_challenge"`
    GeeTestSeccode string `json:"geetest_seccode"`
    GeeTestValidate string `json:"geetest_validate"`
}

type SendEMailUserResponse {
    Code int `json:"code"`
}

type UserResponse {
    AccessToken  string `json:"access_token"`
    RefreshToken string `json:"refresh_token"`
    TokenType    string `json:"token_type"`
    ExpiresIn    int    `json:"expires_in"`
}

type GeeRequest {
	Uuid string `json:"uuid,optional"`
}

type GeeResponse {
	Challenge  string `json:"challenge"`
	Gt         string `json:"gt"`
	NewCaptcha bool   `json:"new_captcha"`
	Success    int    `json:"success"`
}

type UserLogoutResponse {
}